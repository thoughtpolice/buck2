"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6053],{3905:(e,t,a)=>{a.r(t),a.d(t,{MDXContext:()=>i,MDXProvider:()=>d,mdx:()=>f,useMDXComponents:()=>u,withMDXComponents:()=>c});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(){return p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},p.apply(this,arguments)}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},p=Object.keys(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),c=function(e){return function(t){var a=u(t.components);return n.createElement(e,p({},t,{components:a}))}},u=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,p=e.originalType,l=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),c=u(a),d=r,m=c["".concat(l,".").concat(d)]||c[d]||g[d]||p;return a?n.createElement(m,s(s({ref:t},i),{},{components:a})):n.createElement(m,s({ref:t},i))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=a.length,l=new Array(p);l[0]=h;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[m]="string"==typeof e?e:r,l[1]=s;for(var i=2;i<p;i++)l[i]=a[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},41842:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>p,metadata:()=>s,toc:()=>i});var n=a(87462),r=(a(67294),a(3905));const p={id:"target_pattern",title:"Target Pattern"},l=void 0,s={unversionedId:"concepts/target_pattern",id:"concepts/target_pattern",title:"Target Pattern",description:"A target pattern is a string that resolves to a set of",source:"@site/../docs/concepts/target_pattern.md",sourceDirName:"concepts",slug:"/concepts/target_pattern",permalink:"/docs/concepts/target_pattern",draft:!1,tags:[],version:"current",frontMatter:{id:"target_pattern",title:"Target Pattern"},sidebar:"mainSidebar",previous:{title:"Build Target",permalink:"/docs/concepts/build_target"},next:{title:"buck-out",permalink:"/docs/concepts/buck_out"}},o={},i=[{value:"Build target patterns are not allowed in the deps argument",id:"build-target-patterns-are-not-allowed-in-the-deps-argument",level:3},{value:"Target aliases",id:"target-aliases",level:3}],c={toc:i};function u(e){let{components:t,...a}=e;return(0,r.mdx)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,"A ",(0,r.mdx)("em",{parentName:"p"},"target pattern")," is a string that resolves to a set of\n",(0,r.mdx)("a",{parentName:"p",href:"/docs/concepts/glossary#target"},"targets"),". A target pattern can be used as arguments to\ncommands, such as ",(0,r.mdx)("inlineCode",{parentName:"p"},"buck2 build")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"buck uquery"),". You can also use build target\npatterns in the ",(0,r.mdx)("a",{parentName:"p",href:"/docs/concepts/glossary#visibility"},"visibility")," argument of your build\n",(0,r.mdx)("a",{parentName:"p",href:"/docs/concepts/glossary#rule"},"rules"),"."),(0,r.mdx)("p",null,"The simplest build target pattern matches the build target of the same name:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"#\n# Matches //apps/myapp:app\n#\n//apps/myapp:app\n")),(0,r.mdx)("p",null,"A build target pattern that ends with a colon matches all build targets in the\nbuild file at the preceding directory path. For example, suppose that the build\nfile:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-sh"},"apps/myapp/BUCK\n")),(0,r.mdx)("p",null,"defines the rules: ",(0,r.mdx)("inlineCode",{parentName:"p"},"app_v1")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"app_v2"),", then the following build target\npattern would match both of those rules:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"#\n# Matches //apps/myapp:app_v1 and //apps/myapp:app_v2\n#\n//apps/myapp:\n")),(0,r.mdx)("p",null,"A build target pattern that ends with an ellipsis (",(0,r.mdx)("inlineCode",{parentName:"p"},"/..."),") matches all build\ntargets in the build file in the directory that precedes the ellipsis and also\n",(0,r.mdx)("em",{parentName:"p"},"all build targets in build files in subdirectories"),". For example, suppose that\nyou have the following build files:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"apps/BUCK\napps/myapp/BUCK\n")),(0,r.mdx)("p",null,"then the following pattern would match all build targets in both of those files:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"#\n# Matches (for example) //apps:common and //apps/myapp:app\n#\n//apps/...\n")),(0,r.mdx)("p",null,"A target pattern that does not include a ",(0,r.mdx)("inlineCode",{parentName:"p"},":")," separator matches the target with\nthe same name as the last element of the path:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"#\n# Matches //apps/myapp:myapp\n#\n//apps/myapp\n")),(0,r.mdx)("p",null,"Finally, target patterns can be relative to your current directory. For example:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"#\n# If your current working directory is `apps`, matches //apps/myapp:myapp\n#\nmyapp:myapp\n")),(0,r.mdx)("h3",{id:"build-target-patterns-are-not-allowed-in-the-deps-argument"},"Build target patterns are not allowed in the deps argument"),(0,r.mdx)("p",null,"Build target patterns cannot be used with the ",(0,r.mdx)("inlineCode",{parentName:"p"},"deps")," argument of a build rule.\nBuck requires that you specify all dependencies explicitly as either\nfully-qualified or relative build targets."),(0,r.mdx)("h3",{id:"target-aliases"},"Target aliases"),(0,r.mdx)("p",null,"Buck supports the ability to define ",(0,r.mdx)("em",{parentName:"p"},"aliases")," for build targets; using aliases\ncan improve brevity when specifying targets on the Buck command line."),(0,r.mdx)("p",null,"To see which aliases exist, use ",(0,r.mdx)("inlineCode",{parentName:"p"},"buck2 audit config alias"),"."))}u.isMDXComponent=!0}}]);