"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2118],{3905:(e,n,a)=>{a.r(n),a.d(n,{MDXContext:()=>p,MDXProvider:()=>c,mdx:()=>C,useMDXComponents:()=>s,withMDXComponents:()=>m});var i=a(67294);function l(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function t(){return t=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var i in a)Object.prototype.hasOwnProperty.call(a,i)&&(e[i]=a[i])}return e},t.apply(this,arguments)}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,i)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){l(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function d(e,n){if(null==e)return{};var a,i,l=function(e,n){if(null==e)return{};var a,i,l={},t=Object.keys(e);for(i=0;i<t.length;i++)a=t[i],n.indexOf(a)>=0||(l[a]=e[a]);return l}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(i=0;i<t.length;i++)a=t[i],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=i.createContext({}),m=function(e){return function(n){var a=s(n.components);return i.createElement(e,t({},n,{components:a}))}},s=function(e){var n=i.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},c=function(e){var n=s(e.components);return i.createElement(p.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},x=i.forwardRef((function(e,n){var a=e.components,l=e.mdxType,t=e.originalType,r=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),m=s(a),c=l,u=m["".concat(r,".").concat(c)]||m[c]||f[c]||t;return a?i.createElement(u,o(o({ref:n},p),{},{components:a})):i.createElement(u,o({ref:n},p))}));function C(e,n){var a=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var t=a.length,r=new Array(t);r[0]=x;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o[u]="string"==typeof e?e:l,r[1]=o;for(var p=2;p<t;p++)r[p]=a[p];return i.createElement.apply(null,r)}return i.createElement.apply(null,a)}x.displayName="MDXCreateElement"},15290:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>s,frontMatter:()=>t,metadata:()=>o,toc:()=>p});var i=a(87462),l=(a(67294),a(3905));const t={id:"package_files",title:"PACKAGE Files"},r=void 0,o={unversionedId:"rule_authors/package_files",id:"rule_authors/package_files",title:"PACKAGE Files",description:"PACKAGE files are per-directory configuration files which are accessible from",source:"@site/../docs/rule_authors/package.md",sourceDirName:"rule_authors",slug:"/rule_authors/package_files",permalink:"/docs/rule_authors/package_files",draft:!1,tags:[],version:"current",frontMatter:{id:"package_files",title:"PACKAGE Files"},sidebar:"mainSidebar",previous:{title:"Local Resources For Tests Execution",permalink:"/docs/rule_authors/local_resources"},next:{title:"Dep Files",permalink:"/docs/rule_authors/dep_files"}},d={},p=[{value:"APIs",id:"apis",level:2},{value:"<code>PACKAGE</code> APIs",id:"package-apis",level:3},{value:"<code>write_package_value</code>",id:"write_package_value",level:4},{value:"<code>read_parent_package_value</code>",id:"read_parent_package_value",level:4},{value:"<code>package</code>",id:"package",level:4},{value:"<code>read_config</code>",id:"read_config",level:4},{value:"<code>BUCK</code>-specific API",id:"buck-specific-api",level:3},{value:"<code>read_package_value</code>",id:"read_package_value",level:4}],m={toc:p};function s(e){let{components:n,...a}=e;return(0,l.mdx)("wrapper",(0,i.Z)({},m,a,{components:n,mdxType:"MDXLayout"}),(0,l.mdx)("p",null,(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," files are per-directory configuration files which are accessible from\nStarlark rules/macros. It supports things like per-directory properties, reading\nparent ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," values (",(0,l.mdx)("inlineCode",{parentName:"p"},"read_parent_package_value()"),"), writing ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE"),"\nvalues (",(0,l.mdx)("inlineCode",{parentName:"p"},"write_package_value()"),"), loading helper ",(0,l.mdx)("inlineCode",{parentName:"p"},"bzl")," files, and you can also\ninspect ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," values via ",(0,l.mdx)("inlineCode",{parentName:"p"},"buck2 audit package-values"),"."),(0,l.mdx)("p",null,"Before evaluating ",(0,l.mdx)("inlineCode",{parentName:"p"},"BUCK")," file, buck2 will evaluate all ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," files in the\nsame directory and all parent directories. Absent ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," files are treated as\nempty files."),(0,l.mdx)("p",null,"All relevant ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," files are executed sequentially from the root directory\nto the current directory (but unrelated ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," files can be executed in\nparallel). Evaluating ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," files sequentially provides additional\nguarantees, for example, attempt to override a property (unless explicitly\nrequested) should fail with Starlark call stack."),(0,l.mdx)("p",null,"Each ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," file is evaluated at most once (like ",(0,l.mdx)("inlineCode",{parentName:"p"},"bzl")," files)."),(0,l.mdx)("p",null,(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," files may load arbitrary ",(0,l.mdx)("inlineCode",{parentName:"p"},"bzl")," files. ",(0,l.mdx)("inlineCode",{parentName:"p"},"BUCK"),"-specific functions called\nin ",(0,l.mdx)("inlineCode",{parentName:"p"},"bzl")," files (like rule functions) are available, but calling functions from\n",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," files is an error. This way, ",(0,l.mdx)("inlineCode",{parentName:"p"},"bzl")," files are evaluated only once\nregardless of whether they are loaded from ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," or ",(0,l.mdx)("inlineCode",{parentName:"p"},"BUCK")," file."),(0,l.mdx)("h2",{id:"apis"},"APIs"),(0,l.mdx)("h3",{id:"package-apis"},(0,l.mdx)("inlineCode",{parentName:"h3"},"PACKAGE")," APIs"),(0,l.mdx)("h4",{id:"write_package_value"},(0,l.mdx)("a",{parentName:"h4",href:"../../api/build/globals/#write_package_value"},(0,l.mdx)("inlineCode",{parentName:"a"},"write_package_value"))),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},'def write_package_value(\n    name: str,\n    value: "",\n    overwrite: bool = False,\n): ...\n')),(0,l.mdx)("p",null,"This global API is only available in ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," files, or ",(0,l.mdx)("inlineCode",{parentName:"p"},"bzl")," files included in\n",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," files."),(0,l.mdx)("p",null,(0,l.mdx)("inlineCode",{parentName:"p"},"name")," is a string which must contain exactly one dot symbol (just to enforce\ncode style)."),(0,l.mdx)("p",null,(0,l.mdx)("inlineCode",{parentName:"p"},"value")," is an arbitrary Starlark value, for example, an integer, a list of\ninteger, a struct or a function. The value must be serializable into JSON."),(0,l.mdx)("p",null,"When ",(0,l.mdx)("inlineCode",{parentName:"p"},"overwrite")," is ",(0,l.mdx)("inlineCode",{parentName:"p"},"False")," (default), attempt to overwrite per-",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," value\ndefined in parent ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," file will fail."),(0,l.mdx)("p",null,"Written values are frozen when ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," file evaluation is finished."),(0,l.mdx)("p",null,"Note ",(0,l.mdx)("inlineCode",{parentName:"p"},"write_package_value")," symbol exists in ",(0,l.mdx)("inlineCode",{parentName:"p"},"bzl")," globals, and it can be called\nfrom ",(0,l.mdx)("inlineCode",{parentName:"p"},"bzl")," file in context of ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," evaluation, but calling\n",(0,l.mdx)("inlineCode",{parentName:"p"},"write_package_file")," is an error on context of ",(0,l.mdx)("inlineCode",{parentName:"p"},"BUCK")," evaluation."),(0,l.mdx)("p",null,"Modifying ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," file logically invalidates the ",(0,l.mdx)("inlineCode",{parentName:"p"},"BUCK")," file of this\ndirectory, and all ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," and ",(0,l.mdx)("inlineCode",{parentName:"p"},"BUCK")," files of sub-",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE"),"s. However, ",(0,l.mdx)("inlineCode",{parentName:"p"},"BUCK"),"\nfile evaluation may track which ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE"),"-local values were accessed and only\ninvalidate ",(0,l.mdx)("inlineCode",{parentName:"p"},"BUCK")," files which were potentially affected (similarly to how we do\nit with buckconfigs)."),(0,l.mdx)("h4",{id:"read_parent_package_value"},(0,l.mdx)("a",{parentName:"h4",href:"../../api/build/globals/#read_parent_package_value"},(0,l.mdx)("inlineCode",{parentName:"a"},"read_parent_package_value"))),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},"def read_parent_package_value(\n    key: str,\n): ...\n")),(0,l.mdx)("p",null,"This global API is only available in ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," files, or ",(0,l.mdx)("inlineCode",{parentName:"p"},"bzl")," files included in\n",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," files."),(0,l.mdx)("p",null,"This function returns the ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," value defined in a parent ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," file, or\n",(0,l.mdx)("inlineCode",{parentName:"p"},"None")," is such value does not exist."),(0,l.mdx)("p",null,"This function is available in ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," files, but attempt to call this function\nin context of ",(0,l.mdx)("inlineCode",{parentName:"p"},"bzl")," file evaluation results in an error."),(0,l.mdx)("h4",{id:"package"},(0,l.mdx)("a",{parentName:"h4",href:"../../api/build/globals/#package"},(0,l.mdx)("inlineCode",{parentName:"a"},"package"))),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},"def package(\n    inherit: bool = False,\n    visibility: list[str] | tuple[str, ...] = [],\n    within_view: list[str] | tuple[str, ...] = []\n) -> None\n")),(0,l.mdx)("p",null,"This global API is only available in ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," files, or ",(0,l.mdx)("inlineCode",{parentName:"p"},"bzl")," files included in\n",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," files."),(0,l.mdx)("p",null,(0,l.mdx)("inlineCode",{parentName:"p"},"visibility")," is a list of visibility patterns to apply to all targets contained\nwithin the directory, unless the target defines it's own visibility patterns."),(0,l.mdx)("p",null,(0,l.mdx)("inlineCode",{parentName:"p"},"within_view")," is a list of visibility patterns restricting what all target\ncontained within the ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," directory can depend on. Applies to first-order\ndeps, and not transitive deps."),(0,l.mdx)("p",null,"If ",(0,l.mdx)("inlineCode",{parentName:"p"},"inherit")," is ",(0,l.mdx)("inlineCode",{parentName:"p"},"True"),", then the ",(0,l.mdx)("inlineCode",{parentName:"p"},"visibility")," and ",(0,l.mdx)("inlineCode",{parentName:"p"},"within_view")," will be\ninherited from the nearest parent ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE"),"."),(0,l.mdx)("h4",{id:"read_config"},(0,l.mdx)("a",{parentName:"h4",href:"../../api/build/globals/#read_config"},(0,l.mdx)("inlineCode",{parentName:"a"},"read_config"))),(0,l.mdx)("p",null,(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," files are able to call ",(0,l.mdx)("inlineCode",{parentName:"p"},"read_config")," to read buckconfigs."),(0,l.mdx)("h3",{id:"buck-specific-api"},(0,l.mdx)("inlineCode",{parentName:"h3"},"BUCK"),"-specific API"),(0,l.mdx)("h4",{id:"read_package_value"},(0,l.mdx)("a",{parentName:"h4",href:"../../api/build/globals/#read_package_value"},(0,l.mdx)("inlineCode",{parentName:"a"},"read_package_value"))),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},"def read_package_value(\n    name: str,\n): ...\n")),(0,l.mdx)("p",null,"This global API is only available in ",(0,l.mdx)("inlineCode",{parentName:"p"},"BUCK")," files, or ",(0,l.mdx)("inlineCode",{parentName:"p"},"bzl")," files included in\n",(0,l.mdx)("inlineCode",{parentName:"p"},"BUCK")," files."),(0,l.mdx)("p",null,"This function returns the nearest ",(0,l.mdx)("inlineCode",{parentName:"p"},"name")," value registered per ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE"),", or\n",(0,l.mdx)("inlineCode",{parentName:"p"},"None")," is such value does not exist."),(0,l.mdx)("p",null,"This function is available in ",(0,l.mdx)("inlineCode",{parentName:"p"},"bzl")," files, but attempt to call this function in\ncontext of ",(0,l.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," file evaluation results in an error. This restriction can\nbe lifted in the future."))}s.isMDXComponent=!0}}]);