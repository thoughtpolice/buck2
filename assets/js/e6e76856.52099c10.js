"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6818],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>o,MDXProvider:()=>c,mdx:()=>y,useMDXComponents:()=>d,withMDXComponents:()=>s});var l=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(){return r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e},r.apply(this,arguments)}function p(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,l,i=function(e,n){if(null==e)return{};var t,l,i={},r=Object.keys(e);for(l=0;l<r.length;l++)t=r[l],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)t=r[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=l.createContext({}),s=function(e){return function(n){var t=d(n.components);return l.createElement(e,r({},n,{components:t}))}},d=function(e){var n=l.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=d(e.components);return l.createElement(o.Provider,{value:n},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},f=l.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,o=u(e,["components","mdxType","originalType","parentName"]),s=d(t),c=i,m=s["".concat(p,".").concat(c)]||s[c]||g[c]||r;return t?l.createElement(m,a(a({ref:n},o),{},{components:t})):l.createElement(m,a({ref:n},o))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,p=new Array(r);p[0]=f;var a={};for(var u in n)hasOwnProperty.call(n,u)&&(a[u]=n[u]);a.originalType=e,a[m]="string"==typeof e?e:i,p[1]=a;for(var o=2;o<r;o++)p[o]=t[o];return l.createElement.apply(null,p)}return l.createElement.apply(null,t)}f.displayName="MDXCreateElement"},46037:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>p,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>o});var l=t(87462),i=(t(67294),t(3905));const r={id:"plugins"},p="plugins type",a={unversionedId:"api/build/plugins",id:"api/build/plugins",title:"plugins type",description:"plugins.All",source:"@site/../docs/api/build/plugins.generated.md",sourceDirName:"api/build",slug:"/api/build/plugins",permalink:"/docs/api/build/plugins",draft:!1,tags:[],version:"current",frontMatter:{id:"plugins"},sidebar:"apiSidebar",previous:{title:"label_relative_path type",permalink:"/docs/api/build/label_relative_path"},next:{title:"promise type",permalink:"/docs/api/build/promise"}},u={},o=[{value:"plugins.All",id:"pluginsall",level:2},{value:"plugins.PluginKind",id:"pluginspluginkind",level:2},{value:"plugins.kind",id:"pluginskind",level:2}],s={toc:o};function d(e){let{components:n,...t}=e;return(0,i.mdx)("wrapper",(0,l.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"plugins-type"},(0,i.mdx)("inlineCode",{parentName:"h1"},"plugins")," type"),(0,i.mdx)("h2",{id:"pluginsall"},"plugins.All"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-python"},"plugins.All: all_plugins\n")),(0,i.mdx)("p",null,"A special value for use with ",(0,i.mdx)("inlineCode",{parentName:"p"},"pulls_and_pushes_plugins"),"."),(0,i.mdx)("p",null,"This value can be passed to ",(0,i.mdx)("inlineCode",{parentName:"p"},"pulls_and_pushes_plugins")," on any ",(0,i.mdx)("inlineCode",{parentName:"p"},"attr.dep()")," to indicate that\nall plugin kinds from the dep should be pulled and pushed. This is useful for rules like\n",(0,i.mdx)("inlineCode",{parentName:"p"},"alias"),"."),(0,i.mdx)("p",null,"This value is not supported on ",(0,i.mdx)("inlineCode",{parentName:"p"},"uses_plugins")," at this time, and hence it is not useful on\n",(0,i.mdx)("inlineCode",{parentName:"p"},"pulls_plugins")," either."),(0,i.mdx)("hr",null),(0,i.mdx)("h2",{id:"pluginspluginkind"},"plugins.PluginKind"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-python"},"plugins.PluginKind: type\n")),(0,i.mdx)("p",null,"Type symbol for ",(0,i.mdx)("inlineCode",{parentName:"p"},"PluginKind"),"."),(0,i.mdx)("hr",null),(0,i.mdx)("h2",{id:"pluginskind"},"plugins.kind"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-python"},"def plugins.kind() -> PluginKind\n")),(0,i.mdx)("p",null,"Create a new plugin kind."),(0,i.mdx)("p",null,"The value returned should always be immediately bound to a global, like ",(0,i.mdx)("inlineCode",{parentName:"p"},"MyPluginKind =\nplugins.kind()")))}d.isMDXComponent=!0}}]);