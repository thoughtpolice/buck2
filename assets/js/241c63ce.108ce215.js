"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4346],{3905:(e,t,r)=>{r.r(t),r.d(t,{MDXContext:()=>u,MDXProvider:()=>g,mdx:()=>f,useMDXComponents:()=>c,withMDXComponents:()=>p});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},i.apply(this,arguments)}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),p=function(e){return function(t){var r=c(t.components);return n.createElement(e,i({},t,{components:r}))}},c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},g=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},d="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),g=a,d=p["".concat(o,".").concat(g)]||p[g]||b[g]||i;return r?n.createElement(d,l(l({ref:t},u),{},{components:r})):n.createElement(d,l({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=v;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}v.displayName="MDXCreateElement"},47891:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var n=r(87462),a=(r(67294),r(3905));const i={id:"bxl.TargetUniverse"},o="bxl.TargetUniverse type",l={unversionedId:"api/bxl/bxl.TargetUniverse",id:"api/bxl/bxl.TargetUniverse",title:"bxl.TargetUniverse type",description:"Target universe in BXL. Used for looking up valid configured targets to use in cquery. This is not needed for uquery.",source:"@site/../docs/api/bxl/bxl.TargetUniverse.generated.md",sourceDirName:"api/bxl",slug:"/api/bxl/bxl.TargetUniverse",permalink:"/docs/api/bxl/bxl.TargetUniverse",draft:!1,tags:[],version:"current",frontMatter:{id:"bxl.TargetUniverse"},sidebar:"apiSidebar",previous:{title:"bxl.OutputStream type",permalink:"/docs/api/bxl/bxl.OutputStream"},next:{title:"bxl.UnconfiguredTargetNode type",permalink:"/docs/api/bxl/bxl.UnconfiguredTargetNode"}},s={},u=[{value:"bxl.TargetUniverse.lookup",id:"bxltargetuniverselookup",level:2},{value:"bxl.TargetUniverse.target_set",id:"bxltargetuniversetarget_set",level:2},{value:"bxl.TargetUniverse.universe_target_set",id:"bxltargetuniverseuniverse_target_set",level:2}],p={toc:u};function c(e){let{components:t,...r}=e;return(0,a.mdx)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"bxltargetuniverse-type"},(0,a.mdx)("inlineCode",{parentName:"h1"},"bxl.TargetUniverse")," type"),(0,a.mdx)("p",null,"Target universe in BXL. Used for looking up valid configured targets to use in cquery. This is not needed for uquery."),(0,a.mdx)("h2",{id:"bxltargetuniverselookup"},"bxl.TargetUniverse.lookup"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},"def bxl.TargetUniverse.lookup(\n    targets: bxl.UnconfiguredTargetNode | str | target_label | target_set | list[bxl.UnconfiguredTargetNode | str | target_label]\n) -> target_set\n")),(0,a.mdx)("p",null,"Looks up valid configured target nodes within the universe. The targets passed in are either string literals, unconfigured target nodes, or unconfigured target labels."),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"bxltargetuniversetarget_set"},"bxl.TargetUniverse.target","_","set"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},"def bxl.TargetUniverse.target_set() -> target_set\n")),(0,a.mdx)("p",null,"The target set of the nodes used to construct the target universe."),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"bxltargetuniverseuniverse_target_set"},"bxl.TargetUniverse.universe","_","target","_","set"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},"def bxl.TargetUniverse.universe_target_set() -> target_set\n")),(0,a.mdx)("p",null,"The target set of the entire target universe."))}c.isMDXComponent=!0}}]);